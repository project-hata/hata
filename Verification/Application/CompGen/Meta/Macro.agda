
module Verification.Application.CompGen.Meta.Macro where

open import Verification.Conventions
open import Verification.Conventions.Meta.Term

postulate
  execTC : (exe : String) (args : List String) (stdIn : String)
         ‚Üí TC (Œ£ ‚Ñï (Œª _ ‚Üí Œ£ String (Œª _ ‚Üí String)))

{-# BUILTIN AGDATCMEXEC execTC #-}

macro
  echo : String ‚Üí Term ‚Üí TC ùüô-ùí∞
  echo mytext hole = do
    (exitCode , (stdOut , stdErr)) ‚Üê execTC "hata-cmd" ("echo" ‚à∑ "--text" ‚à∑ mytext ‚à∑ []) ""
    unify hole (lit (string mytext))

-- _ : echo ("hello") ‚â° "hello world\n"
-- _ = refl-‚â°




bla = echo "hello! this or"



