
module Verification.Core.Category.Std.Limit.Specific.Coproduct.Properties.Monoidal where

open import Verification.Conventions hiding (_โ_)
open import Verification.Core.Setoid.Definition
-- open import Verification.Core.Data.Fin.Definition
open import Verification.Core.Data.Product.Definition
open import Verification.Core.Category.Std.AllOf.Collection.Basics
open import Verification.Core.Algebra.Monoid.Definition
open import Verification.Core.Category.Std.Limit.Specific.Coproduct.Definition

-- {-# DISPLAY isCoequalizer.ฯโ _ = ฯโ #-}
{-# DISPLAY isCategory.Hom _ a b = a โถ b #-}
{-# DISPLAY isCategory.id _ = id #-}
{-# DISPLAY isCategory._โ_ _ f g = f โ g #-}
{-# DISPLAY isCoproduct.ฮนโ _ = ฮนโ #-}
{-# DISPLAY isCoproduct.ฮนโ _ = ฮนโ #-}
{-# DISPLAY isCoproduct.โฆ_โฆ _ x = โฆ x โฆ #-}


module _ {๐' : Category ๐} {{_ : hasFiniteCoproducts ๐'}} where
  private
    macro ๐ = #structureOn โจ ๐' โฉ
    instance
      _ : isSetoid ๐
      _ = isSetoid:byCategory

  byExpand-ฮนโ,ฮนโ : โ{a b c : ๐} -> {f g : a โ b โถ c}
                   -> ฮนโ โ f โผ ฮนโ โ g
                   -> ฮนโ โ f โผ ฮนโ โ g
                   -> f โผ g
  byExpand-ฮนโ,ฮนโ {f = f} {g} pโ pโ =
    f                   โจ expand-ฮนโ,ฮนโ โฉ-โผ
    โฆ ฮนโ โ f , ฮนโ โ f โฆ โจ โฆโ pโ , pโ โโฆ โฉ-โผ
    โฆ ฮนโ โ g , ฮนโ โ g โฆ โจ expand-ฮนโ,ฮนโ โปยน โฉ-โผ
    g                   โ

  -- unit-l-โ : โ{a : ๐} -> โฅ โ a โผ a
  -- unit-l-โ {a} = {!!}
  --   where
  --     f : โฅ โ a โถ a
  --     f = โฆ elim-โฅ , id โฆ

  --     g : a โถ โฅ โ a
  --     g = ฮนโ

  --     lem-1 : f โ g โผ id
  --     lem-1 = ? -- โฆ elim-โฅ , id โฆ โ ฮนโ

  -- unit-r-โ : โ{a : ๐} -> a โ โฅ โผ a
  -- unit-r-โ = {!!}

  module assoc-l-โ {a b c : ๐} where

    f : (a โ b) โ c โถ a โ (b โ c)
    f = โฆ โฆ ฮนโ , ฮนโ โ ฮนโ โฆ , ฮนโ โ ฮนโ โฆ

    g : a โ (b โ c) โถ (a โ b) โ c
    g = โฆ ฮนโ โ ฮนโ , โฆ ฮนโ โ ฮนโ , ฮนโ โฆ โฆ

    lem-1a : ฮนโ โ (ฮนโ โ (f โ g)) โผ ฮนโ โ (ฮนโ โ id)
    lem-1a = ฮนโ โ (ฮนโ โ (f โ g))   โจ refl โ assoc-r-โ โฉ-โผ
              ฮนโ โ ((ฮนโ โ f) โ g)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
              ฮนโ โ (_ โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ _) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              ฮนโ โ g                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ id)        โ

    lem-1b : ฮนโ โ (ฮนโ โ (f โ g)) โผ ฮนโ โ (ฮนโ โ id)
    lem-1b = ฮนโ โ (ฮนโ โ (f โ g))   โจ refl โ assoc-r-โ โฉ-โผ
              ฮนโ โ ((ฮนโ โ f) โ g)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
              ฮนโ โ (_ โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ _) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              (ฮนโ โ ฮนโ) โ g         โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ g)         โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ id)        โ

    lem-1c : ฮนโ โ (f โ g) โผ ฮนโ โ id
    lem-1c = ฮนโ โ (f โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ f) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              (ฮนโ โ ฮนโ) โ g         โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ g)         โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ                    โจ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ id               โ

    lem-1 : f โ g โผ id
    lem-1 = byExpand-ฮนโ,ฮนโ (byExpand-ฮนโ,ฮนโ lem-1a lem-1b) lem-1c

    lem-2a : ฮนโ โ (g โ f) โผ ฮนโ โ id
    lem-2a = ฮนโ โ (g โ f)          โจ assoc-r-โ โฉ-โผ
             (ฮนโ โ g) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
             (ฮนโ โ ฮนโ) โ f         โจ assoc-l-โ โฉ-โผ
             ฮนโ โ (ฮนโ โ f)         โจ refl โ reduce-ฮนโ โฉ-โผ
             ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
             ฮนโ                    โจ unit-r-โ โปยน โฉ-โผ
             ฮนโ โ id               โ

    lem-2b : ฮนโ โ (ฮนโ โ (g โ f)) โผ ฮนโ โ (ฮนโ โ id)
    lem-2b = ฮนโ โ (ฮนโ โ (g โ f))   โจ refl โ assoc-r-โ โฉ-โผ
             ฮนโ โ ((ฮนโ โ g) โ f)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
             ฮนโ โ (_ โ f)          โจ assoc-r-โ โฉ-โผ
             (ฮนโ โ _) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
             (ฮนโ โ ฮนโ) โ f         โจ assoc-l-โ โฉ-โผ
             ฮนโ โ (ฮนโ โ f)         โจ refl โ reduce-ฮนโ โฉ-โผ
             ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
             ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
             ฮนโ โ (ฮนโ โ id)        โ

    lem-2c : ฮนโ โ (ฮนโ โ (g โ f)) โผ ฮนโ โ (ฮนโ โ id)
    lem-2c = ฮนโ โ (ฮนโ โ (g โ f))   โจ refl โ assoc-r-โ โฉ-โผ
             ฮนโ โ ((ฮนโ โ g) โ f)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
             ฮนโ โ (_ โ f)          โจ assoc-r-โ โฉ-โผ
             (ฮนโ โ _) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
             ฮนโ โ f                โจ reduce-ฮนโ โฉ-โผ
             ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
             ฮนโ โ (ฮนโ โ id)        โ

    lem-2 : g โ f โผ id
    lem-2 = byExpand-ฮนโ,ฮนโ lem-2a (byExpand-ฮนโ,ฮนโ lem-2b lem-2c)

    Proof : (a โ b) โ c โผ a โ (b โ c)
    Proof = f since record { inverse-โ = g ; inv-r-โ = lem-1 ; inv-l-โ = lem-2 }

  assoc-l-โ : โ{a b c : ๐} -> (a โ b) โ c โผ a โ (b โ c)
  assoc-l-โ = assoc-l-โ.Proof


  module ยง-assoc-l-โ where
    prop-1 : โ{a b c : ๐} -> (ฮนโ โ ฮนโ) โ โจ assoc-l-โ {a = a} {b} {c} โฉ โผ ฮนโ
    prop-1 = (ฮนโ โ ฮนโ) โ _  โจ assoc-l-โ โฉ-โผ
             ฮนโ โ (ฮนโ โ _)  โจ refl โ reduce-ฮนโ โฉ-โผ
             ฮนโ โ _         โจ reduce-ฮนโ โฉ-โผ
             ฮนโ             โ


  -- isMonoid:byCoproduct : isMonoid ๐
  -- isMonoid:byCoproduct = record
  --                          { _โ_ = _โ_
  --                          ; โ = โฅ
  --                          ; unit-l-โ = {!!}
  --                          ; unit-r-โ = {!!}
  --                          ; assoc-l-โ = {!!}
  --                          ; _โโโ_ = {!!}
  --                          }

