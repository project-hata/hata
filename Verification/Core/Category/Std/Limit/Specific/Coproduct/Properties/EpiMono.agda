
module Verification.Core.Category.Std.Limit.Specific.Coproduct.Properties.EpiMono where

open import Verification.Conventions hiding (_‚äî_)
open import Verification.Core.Setoid
-- open import Verification.Core.Data.Fin.Definition
open import Verification.Core.Data.Product.Definition
open import Verification.Core.Data.Sum.Definition
open import Verification.Core.Category.Std.Category.Definition
open import Verification.Core.Category.Std.Morphism.Iso
open import Verification.Core.Category.Std.Morphism.Mono.Definition
open import Verification.Core.Category.Std.Category.Notation.Associativity

open import Verification.Core.Category.Std.Limit.Specific.Coproduct.Definition


module _ {ùíû : Category ùëñ} where
  module _ {a b x : ‚ü® ùíû ‚ü©} {{_ : isCoproduct a b x}} where

    mono-Œπ‚ÇÄ : isMono Œπ‚ÇÄ
    mono-Œπ‚ÇÄ = {!!}


